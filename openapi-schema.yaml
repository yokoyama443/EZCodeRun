openapi: 3.0.3
info:
  title: EZCodeRunner API
  version: 1.0.0
  description: API for KuteCodeRunner, a programming problem platform
servers:
  - url: http://localhost:8080
    description: Development server
  - url: https://wis.yokoyama443.dev
    description: Production server

paths:
  /api/auth/register:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegistration'
      responses:
        '201':
          description: User successfully registered
        '400':
          description: Invalid input

  /api/auth/login:
    post:
      summary: Log in a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLogin'
      responses:
        '200':
          description: Successfully logged in
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        '401':
          description: Unauthorized

  /api/v1/problem:
    get:
      summary: Get all problems
      security:
        - cookieAuth: []
      responses:
        '200':
          description: List of problems
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Problem'
        '401':
          description: Unauthorized

  /api/v1/problem/{id}:
    get:
      summary: Get a specific problem
      security:
        - cookieAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Problem details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
        '404':
          description: Problem not found
        '401':
          description: Unauthorized

  /api/v1/problem/{id}/submission:
    get:
      summary: Get submissions for a problem
      security:
        - cookieAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: List of submissions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Submission'
        '401':
          description: Unauthorized
    post:
      summary: Submit a solution for a problem
      security:
        - cookieAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmissionCreate'
      responses:
        '201':
          description: Submission created
        '400':
          description: Invalid input
        '401':
          description: Unauthorized

components:
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: token
  schemas:
    UserRegistration:
      type: object
      required:
        - name
        - email
        - password
      properties:
        name:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
          format: password

    UserLogin:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          format: password

    Problem:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        timeLimit:
          type: integer
        memoryLimit:
          type: integer
        freeFeedBackLimit:
          type: integer
        body:
          type: string
        testCaseInput:
          type: string
        testCaseOutput:
          type: string
        priority:
          type: integer

    Submission:
      type: object
      properties:
        id:
          type: integer
        sourceCode:
          type: string
        resultStatus:
          type: string
          enum: [Running, Failed, Success]
        problemId:
          type: integer
        userId:
          type: integer

    SubmissionCreate:
      type: object
      required:
        - sourceCode
      properties:
        sourceCode:
          type: string